{"version":3,"sources":["components/AppNavbar.js","components/OrderFood.js","actions/types.js","actions/favoritesActions.js","components/FoodList.js","actions/itemActions.js","components/FavsList.js","components/ItemModal.js","components/Contact.js","components/Footer.js","reducers/itemReducer.js","reducers/favoritesReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["AppNavbar","props","toggleNavbar","setState","isOpen","state","favorites","this","Navbar","style","opacity","color","dark","expand","className","Container","NavbarBrand","fontFamily","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","href","e","preventDefault","changeView","length","target","Component","connect","OrderFood","handelLink","value","linkName","favor","postmates","ubereats","doordash","console","log","toggle","bind","collapse","deliveryList","restaurant","delivery","map","d","display","Button","size","margin","marginTop","Card","background","CardImg","top","width","src","img_url","alt","CardBody","ButtonGroup","menu","phone","FAVORITES_LOADING","FoodList","onDeleteClick","_id","deleteItem","onAddClick","item","addFavorite","getItems","items","ListGroup","i","ListGroupItem","key","class","name","dispatch","type","axios","get","then","res","data","delete","post","FavsList","deleteFavorite","getFavorites","ItemModal","modalOpen","handelToggle","onChange","onSubmit","newItem","addItem","outline","marginBottom","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","for","Input","id","block","Contact","fontSize","textDecoration","Footer","initialState","loading","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","App","whatToShow","num","content","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d8933ef.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    Container} from 'reactstrap';\nimport {FaRegHeart} from 'react-icons/fa';\nimport {FaRocketchat} from 'react-icons/fa';\nimport {FaLinkedinIn} from 'react-icons/fa';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nclass AppNavbar extends Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            isOpen: false\n        }\n    }\n    \n    toggleNavbar=()=>{\n        this.setState({\n            isOpen: !this.state.isOpen\n        })\n    }\n    render() {\n        let  {favorites} = this.props.favorites\n        return (\n            <div>\n                <Navbar style={{opacity:'.7'}} color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\n                    <Container>\n                        <NavbarBrand style={{color:\"white\",fontFamily:\"Squada One, cursive\"}}>Austin All Nighter</NavbarBrand>\n                        <NavbarToggler onClick={this.toggleNavbar} />\n                        <Collapse  isOpen={this.state.isOpen} navbar>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem >\n                                    <NavLink style={{color:\"white\"}} href=\"#\" onClick={(e)=>{e.preventDefault();\n                                        this.props.changeView(1)}}>Food</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink style={{color:\"white\"}} href=\"#\" onClick={(e)=>{\n                                    e.preventDefault();\n                                    this.props.changeView(2)}}><FaRegHeart />'s  ({favorites.length})</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink style={{color:\"white\"}} href=\"https://github.com/CrisSmith\" target=\"_blank\">GitHub</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink style={{color:\"white\"}} href=\"#\" onClick={(e)=>{e.preventDefault();\n                                        this.props.changeView(3)}}>Contact</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink style={{color:\"white\"}} href=\"https://www.linkedin.com/in/cris-smith-696b21191\" target=\"_blank\"><FaLinkedinIn /></NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink style={{color:\"white\"}} href=\"#\" target=\"_blank\"><FaRocketchat /></NavLink>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </Container>\n                </Navbar>\n            </div>\n        )\n    }\n}\n\nAppNavbar.propTypes = {\n    favorites: PropTypes.object.isRequired\n}\nconst mapStateToProps = (state) => ({\n    favorites: state.favorites\n})\n\nexport default connect(mapStateToProps)(AppNavbar)\n\n//export default AppNavbar;","import React, { Component } from 'react';\nimport { Collapse, Button, ButtonGroup, CardBody, Card ,CardImg} from 'reactstrap';\n\n\nclass OrderFood extends Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.state = { \n      collapse: false,\n      linkName:\"\",\n      favor:\"https://favordelivery.com\",\n      doordash:\"https://www.doordash.com/food-delivery/austin-tx-restaurants/\",\n      postmates:\"https://postmates.com\",\n      ubereats:\"https://www.ubereats.com/en-US/austin/\"\n      };\n  }\n\n  toggle() {\n    this.setState(state => ({ collapse: !state.collapse }));\n  }\n  handelLink = (e) => {\n    if(e.target.value === \"favor\"){\n      return(\n        this.setState({\n          linkName: this.state.favor\n        })\n      )\n    }\n    else if (e.target.value === \"postmates\"){\n      return(\n        this.setState({\n          linkName: this.state.postmates\n        })\n      )\n    }\n    else if (e.target.value === \"ubereats\"){\n      return(\n        this.setState({\n          linkName: this.state.ubereats\n        })\n      )\n    }\n    else if (e.target.value === \"doordash\"){\n      return(\n        this.setState({\n          linkName: this.state.doordash\n        })\n      )\n    }\n    else {\n      this.setState({\n        linkName: this.state.doordash\n      })\n    }\n      console.log(this.state.linkName)\n  }\n  \n  render() {\n    \n    let deliveryList = this.props.restaurant.delivery.map(d =>{\n      return (\n        <div>\n            <a style={{display: \"table-cell\"}} href={this.state.linkName} target=\"_blank\"><Button value={d} size=\"sm\" color=\"primary\" style={{ margin: '3px' }} onClick={this.handelLink}>{d}</Button></a>\n        </div>\n      )\n    })\n    return (\n      <div >\n        <Button size=\"lg\" color=\"dark\" style={{ marginTop:'4px'}} onClick={this.toggle}>order</Button>\n        <Collapse isOpen={this.state.collapse}>\n          <Card style={{ marginTop: '10px', background:\"#b7c9e1\"}}>\n            <CardImg  top width=\"100%\" src={this.props.restaurant.img_url} alt=\"Card image cap\" />\n            <CardBody>\n                <p>Delivery:</p>\n                <ButtonGroup >{deliveryList}</ButtonGroup>\n                <hr></hr>\n                <p>Browse:<a href={this.props.restaurant.menu} target=\"_blank\"> Menu</a></p>\n                <p>Pickup: {this.props.restaurant.phone}</p>\n            </CardBody>\n          </Card>\n        </Collapse>\n      </div>\n    );\n  }\n}\n\nexport default OrderFood;","export const GET_ITEMS = \"GET_ITEMS\";\nexport const ADD_ITEM = \"ADD_ITEM\";\nexport const DELETE_ITEM = \"DELETE_ITEM\";\nexport const ITEMS_LOADING =\"ITEMS_LOADING\"\n\nexport const GET_FAVORITES = \"GET_FAVORITES\";\nexport const ADD_FAVORITE = \"ADD_FAVORITE\";\nexport const DELETE_FAVORITE = \"DELETE_FAVORITE\";\nexport const FAVORITES_LOADING =\"FAVORITES_LOADING\"\n\n","import axios from 'axios';\nimport {GET_FAVORITES, ADD_FAVORITE, DELETE_FAVORITE, FAVORITES_LOADING} from './types';\n\nexport function setItemsLoading(){\n    return{\n        type: FAVORITES_LOADING\n    }\n};\nexport const getFavorites = () =>  dispatch => {\n    dispatch(setItemsLoading());\n    axios.get('/favorites').then(res =>\n        dispatch({\n           type: GET_FAVORITES,\n           value: res.data \n        })\n    );\n};\nexport const addFavorite = (item) => dispatch => {\n    axios.post('/favorites', item)\n    .then(res=>\n        dispatch({\n            type: ADD_FAVORITE,\n            value: res.data\n        })\n    );\n};\nexport const deleteFavorite = (_id) => dispatch => {\n    axios.delete(`/favorites/${_id}`)\n    .then(res=>\n        dispatch({\n            type: DELETE_FAVORITE,\n            value: _id\n        })\n    );\n};\n\n/*\nacitions without axios\nexport const getFavorites = () => {\n    return {\n        type: GET_FAVORITES\n    };\n};\nexport const addFavorite = (item) => {\n    return {\n        type: ADD_FAVORITE,\n        value:item\n    };\n};\nexport const deleteFavorite = (_id) => {\n    return {\n        type: DELETE_FAVORITE,\n        value: _id\n    };\n};\n*/","import React, {Component} from 'react';\nimport {Container, ListGroup, ListGroupItem, Button} from 'reactstrap';\nimport OrderFood from './OrderFood';\nimport PropTypes from 'prop-types';\nimport {FaRegHeart} from 'react-icons/fa';\nimport {connect} from 'react-redux';\nimport {getItems, deleteItem} from '../actions/itemActions';\nimport {addFavorite} from '../actions/favoritesActions';\nimport {FaTimes} from 'react-icons/fa';\n\nclass FoodList extends Component {\n    \n    componentDidMount(){\n        this.props.getItems();\n    }\n    onDeleteClick = (_id) => {\n        this.props.deleteItem(_id)\n    }\n    onAddClick=(item)=>{\n        this.props.addFavorite(item);\n    }\n    render() {\n        const {items} = this.props.item;\n        \n        return (\n            <Container style={{background: \"transparent\"}}>\n                <ListGroup>\n                    {items.map((i)=>{\n                        return (       \n                            <ListGroupItem key={i._id} style={{margin:\"4px\", background:\"#dbe4f0\"}}>\n                            <Button \n                            size=\"sm\" \n                            color=\"danger\" \n                            className = \"float-right\"\n                            class=\"rounded-2\" \n                            style={{ margin: '2px'}} \n                            onClick={()=>{\n                                this.onAddClick(i)}}>\n                                <FaRegHeart />\n                            </Button>\n                            <Button \n                            size=\"sm\" \n                            color=\"secondary\"\n                            className=\"float-right\" \n                            style={{ margin: '2px' }}\n                            onClick={()=>{\n                                this.onDeleteClick(i._id)}}>\n                                <FaTimes />\n                            </Button> \n                            <h4 style={{color:\"black\", fontFamily:\"Squada One, cursive\"}}>{i.name}</h4>\n                            <OrderFood restaurant={i}/>\n                        </ListGroupItem>\n                        )\n                    })}\n                </ListGroup>\n            </Container>    \n        )\n    }\n}\n\nFoodList.propTypes = {\n    getItems: PropTypes.func.isRequired,\n    deleteItem: PropTypes.func.isRequired,\n    addFavorite: PropTypes.func.isRequired,\n    item: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n     item: state.item\n})\n\nexport default connect(mapStateToProps, {getItems, deleteItem, addFavorite})(FoodList)\n\n ","import axios from 'axios';\nimport {GET_ITEMS, ADD_ITEM, ITEMS_LOADING, DELETE_ITEM} from './types';\n\nexport const setItemsLoading = () => {\n    return{\n        type: ITEMS_LOADING\n    }\n};\nexport const getItems = () =>  dispatch => {\n    dispatch(setItemsLoading());\n    axios.get('/items')\n    .then(res =>\n        dispatch({\n           type: GET_ITEMS,\n           value: res.data \n        })\n    );\n};\nexport const addItem = (item) => dispatch => {\n    axios.post('/items', item)\n    .then(res=>\n        dispatch({\n            type: ADD_ITEM,\n            value: res.data\n        })\n    );\n};\nexport const deleteItem = (_id) => dispatch => {\n    axios.delete(`/items/${_id}`)\n    .then(res=>\n        dispatch({\n            type: DELETE_ITEM,\n            value: _id\n        })\n    );\n};\n\n/*\nactions without axios:\n\nexport const getItems = () => {\n    return {\n        type: GET_ITEMS\n    };\n};\nexport const addItem = (item) => {\n    return {\n        type: ADD_ITEM, \n        value: item\n    };\n};\nexport const deleteItem = (_id) => {\n    return {\n        type: DELETE_ITEM,\n        value: _id\n    };\n};\n*/","import React, {Component} from 'react';\nimport {Container, ListGroup, ListGroupItem, Button} from 'reactstrap';\nimport OrderFood from './OrderFood';\nimport {FaTimes} from 'react-icons/fa';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {getFavorites, deleteFavorite} from '../actions/favoritesActions';\n\n\nclass FavsList extends Component { \n   \n    componentDidMount(){\n        this.props.getFavorites();\n    }\n    onDeleteClick = (_id) => {\n        this.props.deleteFavorite(_id)\n    }\n\n    render() {\n        const {favorites} = this.props.favorites\n            return (\n                <Container style={{background: \"transparent\"}}>\n                <ListGroup>\n                    {favorites.map((i)=>{\n                        return (\n                            <ListGroupItem key={i._id} style={{margin:\"4px\", background:\"#dbe4f0\"}}>\n                        <Button \n                        className=\"float-right\" \n                        size=\"sm\" \n                        color=\"secondary\" \n                        style={{margin:'2px'}}\n                        onClick={()=>{\n                            this.onDeleteClick(i._id)\n                        }}>\n                        <FaTimes /></Button>\n                        <h4 style={{color:\"black\", fontFamily:\"Squada One, cursive\"}}>{i.name}</h4>\n                    <OrderFood restaurant={i} />\n                    </ListGroupItem> \n                )    \n            })}\n            </ListGroup>\n        </Container>\n        )\n    }\n}\nFavsList.propTypes = {\n    getFavorites: PropTypes.func.isRequired,\n    deleteFavorite: PropTypes.func.isRequired, \n    favorites: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n     favorites: state.favorites\n})\n\nexport default connect(mapStateToProps, {getFavorites, deleteFavorite})(FavsList)","//The \"Form\" component\nimport React, { Component } from 'react';\nimport {Button, Modal, ModalHeader, ModalBody, Input, Label, Form, FormGroup} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {addItem} from '../actions/itemActions'\n\n\nclass ItemModal extends Component {\n    state={\n        modalOpen: false,\n        name:''\n    }\n    handelToggle=()=>{\n        this.setState({\n            modalOpen: !this.state.modalOpen\n        })\n    }\n    onChange=(e)=>{\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    onSubmit=(e)=>{\n        e.preventDefault();\n        let newItem ={\n            name: this.state.name\n        }\n        this.props.addItem(newItem);\n        this.handelToggle();\n    }\n    render() {\n        return (\n            <div>\n                <Button size=\"lg\" outline color=\"warning\" style={{marginBottom: '2rem'}} onClick={this.handelToggle}>Add this joint....</Button>\n                <Modal toggle={this.handelToggle} isOpen={this.state.modalOpen}>\n                    <ModalHeader toggle={this.handelToggle}>Adding this place before I forget...</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.onSubmit}>\n                            <FormGroup>\n                                <Label for=\"item\">Name:</Label>\n                                <Input type=\"text\" name=\"name\" id=\"item\" onChange={this.onChange}></Input>\n                                <Button color=\"warning\" style={{marginTop:\"10px\"}} block>Add Restaurant</Button>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nItemModal.propTypes = {\n    addItem: PropTypes.func.isRequired, \n    item: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n     item: state.item\n})\n\nexport default connect(mapStateToProps,{addItem})(ItemModal)\n","import React, { Component } from 'react';\nimport { ListGroup, ListGroupItem } from 'reactstrap';\n\n\nclass Contact extends Component {\n    render() {\n        return (\n            <ListGroup style={{fontSize: \"20px\", fontFamily:\"Squada One, cursive\"}}>\n                <ListGroupItem style={{margin:\"4px\", background:\"#dbe4f0\"}}>comments: <a style={{textDecoration:\"none\"}} type=\"email\" href=\"#\" target=\"_blank\">info@allnighter.com</a></ListGroupItem>\n                <ListGroupItem style={{margin:\"4px\", background:\"#dbe4f0\"}}>support: <a style={{textDecoration:\"none\"}} type=\"email\" href=\"#\" target=\"_blank\">support@allnighter.com</a></ListGroupItem>\n                <ListGroupItem style={{margin:\"4px\", background:\"#dbe4f0\"}}>careers: <a style={{textDecoration:\"none\"}} type=\"email\" href=\"#\" target=\"_blank\">careers@allnighter.com</a></ListGroupItem>\n            </ListGroup>\n        )\n    }\n}\nexport default Contact","import React, { Component } from 'react';\n\nclass Footer extends Component {\n    render() {\n        return (    \n    <footer expand=\"sm\" className=\"m-5\">\n        <div className=\"container\">\n            <span className=\"text-muted\">Copyright &copy; C.Smith 2019</span>\n        </div>\n    </footer>\n        )\n    }\n}\n\nexport default Footer","import {GET_ITEMS,ADD_ITEM, ITEMS_LOADING, DELETE_ITEM} from '../actions/types'\n\nconst initialState ={\n     items:[],\n     loading:false\n}\n\nexport default function(state = initialState, action){\n    switch(action.type){\n        case ITEMS_LOADING:\n            return{\n                ...state,\n                loading: true\n            };\n        case GET_ITEMS:\n            return {\n                ...state,\n                items: action.value,\n                loading:false\n            };\n        case ADD_ITEM:\n            return {\n                ...state,\n                items: [...state.items, action.value]\n            };\n        case DELETE_ITEM:\n            return {\n                ...state, \n                items: state.items.filter(item => item._id !== action.value)\n            };\n        default:\n            return state;\n    };\n}\n\n","import {GET_FAVORITES, ADD_FAVORITE, FAVORITES_LOADING, DELETE_FAVORITE} from '../actions/types'\n\nconst initialState = {\n     favorites:[],\n     loading:false\n}\n\n\nexport default function(state = initialState, action){\n    switch(action.type){\n        case FAVORITES_LOADING:\n            return{\n                ...state,\n                loading: true\n            };\n        case GET_FAVORITES:\n            return {\n                ...state,\n                favorites: action.value,\n                loading:false\n            };\n        case ADD_FAVORITE:\n            return {\n                ...state,\n                favorites: [...state.favorites, action.value]\n            };\n        case DELETE_FAVORITE:\n            return {\n                ...state, \n                favorites: state.favorites.filter(item => item._id !== action.value)\n            };\n        default:\n            return state;\n    };\n}\n\n","import {combineReducers} from 'redux';\nimport itemReducer from './itemReducer';\nimport favoritesReducer from './favoritesReducer';\n\n\nexport default combineReducers ({\n    item: itemReducer,\n    favorites: favoritesReducer\n});","import {createStore, applyMiddleware, compose} from 'redux';\nimport rootReducer from './reducers';\nimport thunk from 'redux-thunk';\n\nconst middleware = [thunk];\n\nconst initialState = {};\n\nconst store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware)));\n\nexport default store;","import React, {Component} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AppNavbar from './components/AppNavbar'\nimport FoodList from './components/FoodList';\nimport FavsList from './components/FavsList';\nimport ItemModal from './components/ItemModal';\nimport Contact from './components/Contact';\nimport Footer from './components/Footer';\nimport {Container} from 'reactstrap';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nclass App extends Component {\n  state ={\n    whatToShow:1\n  }\n\n  changeView =(num)=>{\n    this.setState({\n        whatToShow: num\n    })\n  }\n  \n  render(){\n    let content= null;\n    if(this.state.whatToShow === 1){\n      content =\n      <Container>\n        <ItemModal /> \n        <FoodList changeView={this.changeView} />\n      </Container>\n    }\n    else if(this.state.whatToShow === 3){\n      content =\n      <Container>\n        <Contact />\n      </Container>\n    }\n    else {\n      content = \n      <Container>\n        <FavsList />\n      </Container>\n    }\n    return(\n      <Provider store={store} >\n        <div className=\"App\" >\n          <AppNavbar changeView={this.changeView} />\n          <div>{content}</div>\n          <Footer />\n        </div>\n      </Provider>\n      \n    );\n  } \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}